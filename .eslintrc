{
  "env": {            // среды, которые будут включены, задав для каждой из них значение true. Например, следующее включает браузер
    "browser": true,   
    "commonjs": true,
    "es6": true,
    "node": true
},
  "extends": [
    "eslint:all",             // включить все основные правила в текущей установленной версии ESLint
    "airbnb",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:sonarjs/recommended"
],

  "plugins": [
    "react",
    "jsx-a11y",
    "react-hooks",
    "sonarjs",
    "import"
  ],

  "parser": "babel-eslint", /* основные правила ESLint поддерживают только последний финальный стандарт ECMAScript и не поддерживают 
                               экспериментальный (например, новые функции) и нестандартный (например, типы Flow или TypeScript) 
                               синтаксис, предоставляемый Babel. 
                               babel-eslint - это синтаксический анализатор, который позволяет ESLint работать с исходным кодом, 
                               преобразованным Babel. */

  "parserOptions": {
    "ecmaVersion": 2018, 
    "sourceType": "module", 
    "ecmaFeatures": {
      "jsx": true
    }
  },

  "rules": {
    // "react/state-in-constructor": "never", 
    "no-unused-vars": "warn",
    "import/named": 2,
    "import/namespace": 2,
    "import/default": 2,
    "import/export": 2,
    "react-hooks/rules-of-hooks": "error", // Проверяем правила хуков
    "react-hooks/exhaustive-deps": "warn", // Проверяем зависимости эффекта
    "sonarjs/cognitive-complexity": "error",
    "sonarjs/no-identical-expressions": "error",
    "quotes": [2, "single", { "avoidEscape": true }],
    "no-underscore-dangle":  "off",             // allow simphol " _ " ( name of varibles for ex) 
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],  // allow "js / jsx" format of file with JSX 
    "linebreak-style": ["error",  "windows"], 
    "no-console": "off",                      // allow use console.log 
    "arrow-parens": ["error", "as-needed"],  // allow not use parents with 1  argument in a func 
    "object-curly-spacing": "warn",
    "object-curly-newline": ["warn", {     // parametr for (последовательные разрывы строк внутри фигурных скобок)
      "ObjectExpression": { "minProperties": 2 },
      "ObjectPattern":  { "multiline": true },
      "ImportDeclaration": "never",
      "ExportDeclaration": { "multiline": true, "minProperties": 3 }
  }], 
    "indent": ["error", 2],                 //  последовательный отступ ( по умолч 4 )

    "react/prop-types": [1, {             //  for enabling the rule. 0=off, 1=warn, 2=error. Defaults to 0. 
      "ignore": ["className", "children", "location", "params", "location*"]  // предотвращение проверки недостающих елем в React
    }],
    "no-param-reassign": "error",          // запретить переназначение параметров функции
    "prefer-rest-params": 1,              //  предлагать использовать rest parametr
    "arrow-body-style": 0,                // не требовать фигурные скобки в функции-стрелке
    "prefer-template": 1,                 // предлагать использовать литералы вместо канкотонации строк
    "react/prefer-stateless-function": [1, { "ignorePureComponents": true }], // предлагать использовать компонент-функцию, если в ней нет состояния
    "react/jsx-no-bind": [0, {          // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md
      "ignoreRefs": false,
      "allowArrowFunctions": true,
      "allowBind": true
    }]
  },


  "settings": {
    "import/extensions": [
      ".js",
      ".jsx"
    ],
    "react": {
      "createClass": "createReactClass",     // Regex for Component Factory to use,
                                            // default to "createReactClass"
      "pragma": "React",                  // Pragma to use, default to "React"
      "version": "detect",              // React version. "detect" automatically picks the version you have installed.
                                       // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                                     // default to latest and warns if missing
                                    // It will default to "detect" in the future
      "flowVersion": "0.53"       // Flow version
    },
    "linkComponents": [
                              // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      {"name": "Link", "linkAttribute": "to"}
    ]
  }
  
}

